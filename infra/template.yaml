AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Minimal, secure, and cost-effective auth service

Globals:
  Function:
    Runtime: nodejs20.x
    MemorySize: 256
    Timeout: 10
    Tracing: Active
    Environment:
      Variables:
        TABLE_NAME: !Ref UsersTable
        JWT_SECRET_ARN: !Ref JwtSecretArn
        ACCESS_TOKEN_TTL_SECONDS: 900
        REFRESH_TOKEN_TTL_SECONDS: 604800
        LOCKOUT_THRESHOLD: 5
        LOCKOUT_MINUTES: 15
        SECRET_CACHE_TTL_MS: 300000

Parameters:
  JwtSecretArn:
    Type: String
    Description: Secrets Manager Secret ARN or name containing JWT signing secret

Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        SSEEnabled: true

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../dist
      Handler: handlers/auth.register
      Description: Register user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /register
            Method: POST

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../dist
      Handler: handlers/auth.login
      Description: Login user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /login
            Method: POST

  RefreshFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../dist
      Handler: handlers/auth.refresh
      Description: Refresh tokens
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /token/refresh
            Method: POST

Outputs:
  ApiUrl:
    Description: API endpoint URL
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"